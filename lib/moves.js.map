{"version":3,"sources":["../src/moves.js"],"names":["Move","pieceSet","s","startsWith","BoardMove","bmFromString","DropMove","dmFromString","DropMoveNoPieceInformation","dmFromStringNoPieceSet","vector","toString","o","equals","fromString","side","to","b1","b2","parts","split","length","JSON","stringify","toUpperCase","A","B","point","pieceOnSide","isSideA","exports"],"mappings":"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","file":"moves.js","sourcesContent":["// @flow\n'use strict';\n\nimport assert from 'assert';\n\nimport {Side}          from './side.js';\nimport {Point, Vector} from 'geometry-2d';\nimport {Piece, PieceOnSide} from './piece.js';\n\nclass Move {\n    constructor() {}\n    static fromString(pieceSet: Array<IConcretePiece>, s: string): Move {\n        if (s.startsWith('('))\n            return BoardMove.bmFromString(s);\n        else\n            return DropMove.dmFromString(pieceSet, s);\n    }\n    static fromStringNoPieceSetInfo(s: string): Move {\n        if (s.startsWith('('))\n            return BoardMove.bmFromString(s);\n        else\n            return DropMoveNoPieceInformation.dmFromStringNoPieceSet(s);\n    }    \n}\n\nclass BoardMove extends Move {\n    vector: Vector;\n    constructor(vector: Vector) {\n        super();\n        this.vector = vector;\n    }\n    static bmFromString(s: string): BoardMove {\n        return new BoardMove(Vector.fromString(s));\n    }\n    toString(): string {\n        return this.vector.toString();\n    }\n    equals(o: any): boolean {\n        if ( !(o instanceof BoardMove))\n            return false;\n        else\n            return this.vector.equals(o.vector);\n    }\n}\n\nclass DropMoveNoPieceInformation extends Move {\n    side: Side;\n    to: Point;\n    constructor(side: Side, to: Point) {\n        super();\n        this.side  = side;\n        this.to    = to;\n    }\n    static dmFromStringNoPieceSet(s: string): DropMoveNoPieceInformation {\n        const parts: Array<string> = s.split('=>');\n        assert(parts.length===2, JSON.stringify(parts));\n        let side: Side = (parts[0]===parts[0].toUpperCase())?Side.A:Side.B;\n        const point: Point = Point.fromString(parts[1]);\n        return new DropMoveNoPieceInformation(side, point);\n    }\n    toString(): string {\n        return `$?{this.side}=>${this.to}`;\n    }\n    equals(o: any): boolean {\n        if (!(o instanceof DropMoveNoPieceInformation)) {\n            return false;\n        } else {\n            const b1 = o.side === this.side;\n            const b2 = o.to.equals(this.to);\n            return b1&&b2;\n        }\n    }\n}\n\nclass DropMove extends DropMoveNoPieceInformation {\n    pieceOnSide: IConcretePieceOnSide;\n    constructor(pieceOnSide: IConcretePieceOnSide, to: Point) {\n        super(pieceOnSide.isSideA?Side.A:Side.B, to);\n        this.pieceOnSide = pieceOnSide;\n    }\n    static dmFromString(pieceSet: Array<IConcretePiece>, s: string): DropMove {\n        const parts: Array<string> = s.split('=>');\n        assert(parts.length===2, JSON.stringify(parts));\n        const pieceOnSide: IConcretePieceOnSide = PieceOnSide.fromString(pieceSet, parts[0]);\n        const point: Point = Point.fromString(parts[1]);\n        return new DropMove(pieceOnSide, point);\n    }\n    toString(): string {\n        return `${this.pieceOnSide}=>${this.to}`;\n    }\n    equals(o: any) {\n        if (!(o instanceof DropMove)) {\n            return false;\n        } else {\n            const b1 = o.pieceOnSide.equals(this.pieceOnSide);\n            const b2 = o.to.equals(this.to);\n            return b1&&b2;\n        }\n    }\n}\n\n\nexports.Move      = Move;\nexports.BoardMove = BoardMove;\nexports.DropMoveNoPieceInformation = DropMoveNoPieceInformation;\nexports.DropMove  = DropMove;\n\n"]}