{"version":3,"sources":["../src/piece.js"],"names":["sourceMapSupport","require","install","Piece","code","isKing","PieceOnSide","piece","isSideA","demote","rv","toString","toUpperCase","promote","o","sameSide","pieceSet","s","rvs","push","length","exports"],"mappings":"AACA;;;;AAEA;;;;;;;;AAEA,CAAC,YAAW;AACR,QAAMA,mBAAmBC,QAAQ,oBAAR,CAAzB;AACAD,qBAAiBE,OAAjB;AACH,CAHD;;IAKMC,K;AAGF,mBAAYC,IAAZ,EAA0BC,MAA1B,EAA2C;AAAA;;AACvC,aAAKD,IAAL,GAAYA,IAAZ;AACA,aAAKC,MAAL,GAAcA,MAAd;AACH;;;;mCACkB;AACf,mBAAO,KAAKD,IAAZ;AACH;;;;;;IAGCE,W;AAGF,yBAAYC,KAAZ,EAAmCC,OAAnC,EAAqD;AAAA;;AAChD,YAAD;AACA,aAAKD,KAAL,GAAeA,KAAf;AACA,aAAKC,OAAL,GAAeA,OAAf;AACH;;;;sCACmC;AAChC,mBAAO,IAAIF,WAAJ,CAAgB,KAAKC,KAArB,EAA4B,CAAC,KAAKC,OAAlC,CAAP;AACH;;;+CAC4C;AACzC,mBAAO,IAAIF,WAAJ,CAAgB,KAAKC,KAAL,CAAWE,MAAX,EAAhB,EAAqC,CAAC,KAAKD,OAA3C,CAAP;AACH;;;mCACkB;AACf,gBAAIE,KAAK,KAAKH,KAAL,CAAWI,QAAX,EAAT;AACA,gBAAI,KAAKH,OAAT,EACIE,KAAKA,GAAGE,WAAH,EAAL;AACJ,mBAAOF,EAAP;AACH;;;kCAa+B;AAC5B,mBAAO,IAAIJ,WAAJ,CAAgB,KAAKC,KAAL,CAAWM,OAAX,EAAhB,EAAsC,KAAKL,OAA3C,CAAP;AACH;;;iCACQM,C,EAAkC;AACvC,mBAAO,KAAKN,OAAL,KAAiBM,EAAEN,OAA1B;AACH;;;+BACMM,C,EAAkC;AACrC,kCAAOA,aAAaR,WAApB,EADqC,CACH;AAClC,mBAAO,KAAKC,KAAL,KAAeO,EAAEP,KAAjB,IAA0B,KAAKQ,QAAL,CAAcD,CAAd,CAAjC;AACH;;;mCArBiBE,Q,EAAiCC,C,EAAiC;AAChF,gBAAMC,MAA0B,EAAhC;AADgF;AAAA;AAAA;;AAAA;AAEhF,qCAAkCF,QAAlC,8HAA4C;AAAA,wBAAnCT,KAAmC;;AACxC,wBAAIA,MAAMH,IAAN,KAAaa,CAAjB,EACIC,IAAIC,IAAJ,CAAW,IAAIb,WAAJ,CAAgBC,KAAhB,EAAuB,KAAvB,CAAX;AACJ,wBAAIA,MAAMH,IAAN,CAAWQ,WAAX,OAA2BK,CAA/B,EACIC,IAAIC,IAAJ,CAAW,IAAIb,WAAJ,CAAgBC,KAAhB,EAAuB,IAAvB,CAAX;AACP;AAP+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQhF,kCAASW,IAAIE,MAAJ,KAAa,CAAtB;AACA,kCAASF,IAAI,CAAJ,aAAkBZ,WAA3B;AACA,mBAAOY,IAAI,CAAJ,CAAP;AACH;;;;;;AAYLG,QAAQlB,KAAR,GAAsBA,KAAtB;AACAkB,QAAQf,WAAR,GAAsBA,WAAtB","file":"piece.js","sourcesContent":["// @flow\n'use strict';\n\nimport assert from 'assert';\n\n(function() {\n    const sourceMapSupport = require('source-map-support');\n    sourceMapSupport.install();\n})();\n\nclass Piece {\n    code: string;\n    isKing: boolean;\n    constructor(code: string, isKing: boolean) {\n        this.code = code;\n        this.isKing = isKing;\n    }\n    toString(): string {\n        return this.code;\n    }\n}\n\nclass PieceOnSide {\n    piece: IConcretePiece;\n    isSideA: boolean;\n    constructor(piece: IConcretePiece, isSideA: boolean) {\n        (this: IConcretePieceOnSide);\n        this.piece   = piece;\n        this.isSideA = isSideA;\n    }\n    switchSides(): IConcretePieceOnSide {\n        return new PieceOnSide(this.piece, !this.isSideA);\n    }\n    switchSidesAndDemote(): IConcretePieceOnSide {\n        return new PieceOnSide(this.piece.demote(), !this.isSideA);\n    }\n    toString(): string {\n        let rv = this.piece.toString();\n        if (this.isSideA)\n            rv = rv.toUpperCase();\n        return rv;\n    }\n    static fromString(pieceSet: Array<IConcretePiece>, s: string): IConcretePieceOnSide {\n        const rvs: Array<PieceOnSide> = [];\n        for (let piece: IConcretePiece of pieceSet) {\n            if (piece.code===s)\n                rvs.push ( new PieceOnSide(piece, false) );\n            if (piece.code.toUpperCase()===s)\n                rvs.push ( new PieceOnSide(piece, true) );\n        }\n        assert( (rvs.length===1) );\n        assert  (rvs[0] instanceof PieceOnSide);\n        return rvs[0];\n    }\n    promote(): IConcretePieceOnSide {\n        return new PieceOnSide(this.piece.promote(), this.isSideA);\n    }\n    sameSide(o: IConcretePieceOnSide): boolean {\n        return this.isSideA === o.isSideA;\n    }\n    equals(o: IConcretePieceOnSide): boolean {\n        assert(o instanceof PieceOnSide); // this library is designed in such a way as this should never be called with an argument that's not a PieceOnSide\n        return this.piece === o.piece && this.sameSide(o);\n    }\n}\nexports.Piece       = Piece;\nexports.PieceOnSide = PieceOnSide;\n"]}