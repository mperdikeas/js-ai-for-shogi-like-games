{"version":3,"sources":["../src/move-tree-clipper.js"],"names":["sourceMapSupport","require","install","moveTreeClipper","tree","sideAMakesTheFirstMove","_moveTreeClipper","root","otherSideMovesSoClippingIsAllowed","isLeaf","children","forEach","child","edge","Error"],"mappings":"AACA;;;;;;AAOA;;;;AACA;;;;AAEA;;;;AAGA;;AACA;;;;AAZA,CAAC,YAAW;AACR,QAAMA,mBAAmBC,QAAQ,oBAAR,CAAzB;AACAD,qBAAiBE,OAAjB;AACH,CAHD;;AAcA,SAASC,eAAT,CAAyBC,IAAzB,EAA8D;;AAE1D,QAAMC,yBAAkC,IAAxC;;AAEA,aAASC,gBAAT,CAA0BC,IAA1B,EAAyDC,iCAAzD,EAA2G;AACvG,YAAID,KAAKE,MAAL,EAAJ,EACI,OAFmG,CAE3F;AACZ,YAAIF,KAAKG,QAAL,IAAe,IAAnB,EAAyB;AACjC;;AAEYH,iBAAKG,QAAL,CAAcC,OAAd,CAAuB,UAACC,KAAD,EAAiCC,IAAjC,EAAkD;AACrF;AACa,aAFD;;AAIF,gBAAIL,iCAAJ,EAAuC,CAEpC;AACJ,SAVD,MAUO,MAAM,IAAIM,KAAJ,CAAU,KAAV,CAAN;AACV;;AAEDR,qBAAiBF,IAAjB,EAAuB,KAAvB;AACH;;kBAGcD,e","file":"move-tree-clipper.js","sourcesContent":["// @flow\n'use strict';\n\n(function() {\n    const sourceMapSupport = require('source-map-support');\n    sourceMapSupport.install();\n})();\n\nimport assert from 'assert';\nimport _ from 'lodash';\n\nimport not_used from './number-prototype.js';\n\n\nimport {GameBoard}             from './board-lib.js';\nimport {Node}                  from './trees.js';\n\nfunction moveTreeClipper(tree: Node<GameBoard, string>): void {\n\n    const sideAMakesTheFirstMove: boolean = true;\n\n    function _moveTreeClipper(root: Node<GameBoard, string>, otherSideMovesSoClippingIsAllowed: boolean): void {\n        if (root.isLeaf())\n            return; // put a floor to the recursion if we reached a leaf\n        if (root.children!=null) {\n//            assert(true);\n  \n            root.children.forEach( (child: Node<GameBoard, string>, edge: string) => {\n//                _moveTreeClipper(child, !otherSideMovesSoClippingIsAllowed);\n            });\n\n          if (otherSideMovesSoClippingIsAllowed) {\n\n            }            \n        } else throw new Error('bug');\n    }\n\n    _moveTreeClipper(tree, false);\n}\n\n\nexport default moveTreeClipper;\n"]}