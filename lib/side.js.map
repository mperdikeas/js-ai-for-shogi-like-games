{"version":3,"sources":["../src/side.js"],"names":["Side","Object","freeze","A","B","Error","isSideA","exports"],"mappings":"AACA;;;;;;IAGMA,I;AACF,oBAAa;AAAA;;AACTC,eAAOC,MAAP,CAAc,IAAd;AACH;;;;mCAWgB;AACb,gBAAI,SAAOF,KAAKG,CAAhB,EACI,OAAOH,KAAKI,CAAZ;AACJ,gBAAI,SAAOJ,KAAKI,CAAhB,EACI,OAAOJ,KAAKG,CAAZ;AACJ,kBAAM,IAAIE,KAAJ,EAAN;AACH;;;2CAbyBC,O,EAAwB;AAC9C,gBAAIA,OAAJ,EACI,OAAON,KAAKG,CAAZ,CADJ,KAGI,OAAOH,KAAKI,CAAZ;AACP;;;;;;AAZCJ,I,CAKKG,C,GAAU,IAAIH,IAAJ,E;AALfA,I,CAMKI,C,GAAU,IAAIJ,IAAJ,E;;;AAkBrBC,OAAOC,MAAP,CAAcF,IAAd;;AAEAO,QAAQP,IAAR,GAAeA,IAAf","file":"side.js","sourcesContent":["// @flow\n'use strict';\n\n\nclass Side {\n    constructor(){\n        Object.freeze(this);\n    }\n\n    static A: Side = new Side();\n    static B: Side = new Side();\n    static fromWhetherIsSideA(isSideA: boolean): Side {\n        if (isSideA)\n            return Side.A;\n        else\n            return Side.B;\n    }\n\n    theOther(): Side {\n        if (this===Side.A)\n            return Side.B;\n        if (this===Side.B)\n            return Side.A;\n        throw new Error();\n    }\n}\n\n\nObject.freeze(Side);\n\nexports.Side = Side;\n"]}